// <auto-generated />
using System;
using GavinTech.Accounts.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GavinTech.Accounts.Migrations.Sqlite
{
    [DbContext(typeof(AccountsDbContext))]
    [Migration("20210815095734_Sign_Ids")]
    partial class Sign_Ids
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.9");

            modelBuilder.Entity("GavinTech.Accounts.Domain.Entities.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ClosedAfter")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ParentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("ParentId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("GavinTech.Accounts.Domain.Entities.TransactionTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AccountId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Amount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Day")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsRecurring")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("TransactionTemplates");

                    b.HasDiscriminator<bool>("IsRecurring").HasValue(false);
                });

            modelBuilder.Entity("GavinTech.Accounts.Domain.Entities.RecurringTransactionTemplate", b =>
                {
                    b.HasBaseType("GavinTech.Accounts.Domain.Entities.TransactionTemplate");

                    b.Property<int>("Basis")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("Multiplicand")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Tombstones")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("UntilExcl")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue(true);
                });

            modelBuilder.Entity("GavinTech.Accounts.Domain.Entities.Account", b =>
                {
                    b.HasOne("GavinTech.Accounts.Domain.Entities.Account", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("GavinTech.Accounts.Domain.Entities.TransactionTemplate", b =>
                {
                    b.HasOne("GavinTech.Accounts.Domain.Entities.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId");

                    b.Navigation("Account");
                });
#pragma warning restore 612, 618
        }
    }
}
